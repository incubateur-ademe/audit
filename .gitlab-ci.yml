variables:
  SSH_PRIVATE_KEY_BASE64: ${SCALINGO_SSH_PRIVATE_KEY_BASE64}
  SSH_PRIVATE_KEY: ${SCALINGO_SSH_PRIVATE_KEY}
  GIT_DEPTH: 0

image: node:20

stages:
- staging
- ci
- production

sast:
  stage: ci

lint:
  stage: ci
  script:
    - yarn
    - yarn lint

test:
  stage: ci
  script:
    - yarn
    - yarn test-ci
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml

deploy-staging:
  image: ilyasemenov/gitlab-ci-git-push
  stage: staging
  rules:
      - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  # Run this job when commits are pushed or merged to the default branch
  script:
    #- git fetch origin main --unshallow
    - git-push git@ssh.osc-fr1.scalingo.com:survey-builder-anct-staging.git main

release-prod:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  stage: production
  allow_failure: false
  rules:
    - if: $CI_COMMIT_TAG
      when: never                                  # Do not run this job when a tag is created manually
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  # Run this job when commits are pushed or merged to the default branch
  when: manual
  script: "echo 'Creating release'"
  manual_confirmation: 'Are you sure you want to deploy to production ?'
  release:                                         # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    tag_name: 'v0.$CI_PIPELINE_IID'                # The version is incremented per pipeline.
    description: 'v0.$CI_PIPELINE_IID'
    ref: '$CI_COMMIT_SHA'                          # The tag is created from the pipeline SHA.

deploy-prod:
  image: ilyasemenov/gitlab-ci-git-push
  stage: production
  rules:
    - if: $CI_COMMIT_TAG
  script:
#    - SSH_PRIVATE_KEY=`echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d`
    - git-push git@ssh.osc-secnum-fr1.scalingo.com:survey-builder-anct-prod.git main

include:
  - template: Security/SAST.gitlab-ci.yml

